name: 新股信息推送任务（仅时间判断）新增5分钟定时测试任务

on:
  schedule:
    # 初始推送：9:36
    - cron: '36 1 * * 1-5'  # UTC 1:36 = 北京时间9:36
    
    # 交易时段检查点（北京时间）
    - cron: '0 2 * * 1-5'   # 10:00
    - cron: '0 3 * * 1-5'   # 11:00
    - cron: '0 4 * * 1-5'   # 12:00
    - cron: '0 5 * * 1-5'   # 13:00
    - cron: '0 6 * * 1-5'   # 14:00
    - cron: '30 6 * * 1-5'  # 14:30（最终检查点）
    
    # 测试定时任务（每5分钟运行一次）
    # - cron: '*/5 * * * *'

  # 手动触发
  workflow_dispatch:
    inputs:
      task:
        description: '选择任务类型'
        required: true
        type: choice
        options:
          - 'push_new_stock'  # 正常推送
          - 'test_push'       # 测试推送


jobs:
  run_task:
    if: ${{ (github.event_name == 'schedule') || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'push_new_stock') || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'test_push') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: 拉取仓库代码
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      
      - name: 配置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: 调试信息
        run: |
          echo "当前UTC时间: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "当前北京时间: $(date -u -d '+8 hours' '+%Y-%m-%d %H:%M:%S')"
          echo "事件类型: ${{ github.event_name }}"
          echo "定时表达式: ${{ join(github.event.schedule, ', ') || '无' }}"
          echo "任务类型: ${{ github.event.inputs.task || 'schedule' }}"
          echo "仓库信息:"
          git remote -v
          git branch -a
      
      - name: 检测是否为测试定时任务
        id: check_test_cron
        run: |
          # 检查是否是测试定时任务（每5分钟）
          if [[ "${{ join(github.event.schedule, ', ') }}" == "*/5 * * * *" ]]; then
            echo "IS_TEST_CRON=true" >> $GITHUB_OUTPUT
            echo "检测到测试定时任务"
          else
            echo "IS_TEST_CRON=false" >> $GITHUB_OUTPUT
          fi
      
      - name: 执行任务
        env:
          TASK: ${{ github.event.inputs.task || 'push_new_stock' }}
          TEST_MODE: ${{ github.event.inputs.task == 'test_push' || steps.check_test_cron.outputs.IS_TEST_CRON == 'true' }}
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
        run: |
          echo "执行模式: TASK=$TASK, TEST_MODE=$TEST_MODE"
          python main.py
          
          # 提交状态标记
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/flags/
          git commit -m "更新状态: $(date +'%Y-%m-%d %H:%M')" || echo "无更新"
          git push origin main || echo "推送标记失败"

      - name: 任务完成
        run: echo "执行结束"
